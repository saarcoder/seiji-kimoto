/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_text,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	set_data,
	text
} from "svelte/internal";

function create_fragment(ctx) {
	let section;
	let div1;
	let div0;
	let t_value = /*link*/ ctx[0].title + "";
	let t;
	let mounted;
	let dispose;

	return {
		c() {
			section = element("section");
			div1 = element("div");
			div0 = element("div");
			t = text(t_value);
			this.h();
		},
		l(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div1 = claim_element(section_nodes, "DIV", {});
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t = claim_text(div0_nodes, t_value);
			div0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			section_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(div0, "class", "btn btn-primary btn-hero svelte-1lf7d5v");
			attr(section, "class", "cover-container d-flex w-100 h-100 text-center svelte-1lf7d5v");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			append(section, div1);
			append(div1, div0);
			append(div0, t);

			if (!mounted) {
				dispose = listen(div0, "click", handleClick);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*link*/ 1 && t_value !== (t_value = /*link*/ ctx[0].title + "")) set_data(t, t_value);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(section);
			mounted = false;
			dispose();
		}
	};
}

function handleClick() {
	let height = document.querySelector(".cover-container").offsetHeight;
	window.scrollTo({ top: height, left: 0, behavior: "smooth" });
}

function instance($$self, $$props, $$invalidate) {
	let { link } = $$props;

	$$self.$$set = $$props => {
		if ("link" in $$props) $$invalidate(0, link = $$props.link);
	};

	return [link];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { link: 0 });
	}
}

export default Component;